/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examen_supletorio;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author PCD
 */
public class Interfaz_Tienda extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz_Tienda
     */
    public Interfaz_Tienda() {
        initComponents();
        setTitle("Consulta");
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    Conexion con = new Conexion();
    Connection conexion = con.ControladorBadedeDatos();
    ArrayList<Articulos> articulos = new ArrayList<Articulos>();
    ArrayList<Fabricantes> fabricantes = new ArrayList<Fabricantes>();
    PreparedStatement presentar;
    PreparedStatement buscar;

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Nombre y Precio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setText("Datos Memorias Ram y Usb");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Datos de Productos de 100$ y 3.50$");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Descuento Productos precio mayor a 4.50");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Listado completo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 27, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)
                        .addGap(54, 54, 54)
                        .addComponent(jButton3)
                        .addGap(51, 51, 51)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jButton5)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    ArrayList Presentar_B3() {
        ArrayList<Articulos> articulos = new ArrayList<Articulos>();
        ArrayList<Fabricantes> fabricantes = new ArrayList<Fabricantes>();
        try {
            String query = "select *from Articulos where precio>= 100 AND Precio>=350";
            buscar = conexion.prepareStatement(query);
            ResultSet resultado = buscar.executeQuery();
            while (resultado.next()) {
                Articulos consulta = new Articulos();
                String Clave_articulo = resultado.getString("Clave_articulo");
                String nombre = resultado.getString("nombre");
                int precio = Integer.parseInt(resultado.getString("precio"));
                String clave_fabricante = resultado.getString("clave_fabricante");
               
                consulta.setClave_articulo(Clave_articulo);
                consulta.setNombre(nombre);
                consulta.setPrecio(precio);
                consulta.setClave_fabricante(clave_fabricante);
                articulos.add(consulta);

            }
//            for (int i = 0; i < consulta.size(); i++) {
//                System.out.println(consulta.get(i).getCliente());
//            }

        } catch (SQLException ex) {
            System.out.println("Error al ejecutar la consulta" + ex);
        }
        return articulos;
    }
    ArrayList Presentar_B2() {
        ArrayList<Articulos> articulos = new ArrayList<Articulos>();
        ArrayList<Fabricantes> fabricantes = new ArrayList<Fabricantes>();
        try {
            String query =  "SELECT * FROM ARTICULOS WHERE Nombre=’Memoria RAM’ OR Nombre=’Memoria USB’" ; 
            buscar = conexion.prepareStatement(query);
            ResultSet resultado = buscar.executeQuery();
            while (resultado.next()) {
                Articulos consulta = new Articulos();
                String Clave_articulo = resultado.getString("Clave_articulo");
                String nombre = resultado.getString("nombre");
                int precio = Integer.parseInt(resultado.getString("precio"));
                String clave_fabricante = resultado.getString("clave_fabricante");
               
                consulta.setClave_articulo(Clave_articulo);
                consulta.setNombre(nombre);
                consulta.setPrecio(precio);
                consulta.setClave_fabricante(clave_fabricante);
                articulos.add(consulta);

            }
//            for (int i = 0; i < consulta.size(); i++) {
//                System.out.println(consulta.get(i).getCliente());
//            }

        } catch (SQLException ex) {
            System.out.println("Error al ejecutar la consulta" + ex);
        }
        return articulos;
    }
    ArrayList Presentar_B1() {
        ArrayList<Articulos> articulos = new ArrayList<Articulos>();
        ArrayList<Fabricantes> fabricantes = new ArrayList<Fabricantes>();
        try {
            String query = "select nombre,precio from Articulos";
            buscar = conexion.prepareStatement(query);
            ResultSet resultado = buscar.executeQuery();
            while (resultado.next()) {
                Articulos consulta = new Articulos();
                //String Clave_articulo = resultado.getString("Clave_articulo");
                String nombre = resultado.getString("nombre");
                int precio = Integer.parseInt(resultado.getString("precio"));
               // String clave_fabricante = resultado.getString("clave_fabricante");
               
                //consulta.setClave_articulo(Clave_articulo);
                consulta.setNombre(nombre);
                consulta.setPrecio(precio);
                //consulta.setClave_fabricante(clave_fabricante);
                articulos.add(consulta);

            }
//            for (int i = 0; i < consulta.size(); i++) {
//                System.out.println(consulta.get(i).getCliente());
//            }

        } catch (SQLException ex) {
            System.out.println("Error al ejecutar la consulta" + ex);
        }
        return articulos;
    }
    ArrayList Presentar_B4() {
           try {
            String mod = "UPDATE Articulos SET precio=precio -10"
                    +"where precio>=450";
            PreparedStatement modificar = conexion.prepareStatement(mod);
            modificar.executeUpdate();
            System.out.println("Elementos modificados");
        } catch (Exception e) {
            System.out.println(e);
        }
        return articulos;
    }
     ArrayList Presentar_B5() {
        ArrayList<Articulos> articulos = new ArrayList<Articulos>();
        ArrayList<Fabricantes> fabricantes = new ArrayList<Fabricantes>();
        try {
            String query = "Select * from Articulos ,Fabricantes"
                    +"Where Articulos.Clave_fabricante=fabricantes.clave_fabricante";
            buscar = conexion.prepareStatement(query);
            ResultSet resultado = buscar.executeQuery();
            while (resultado.next()) {
                Articulos consulta = new Articulos();
                String Clave_articulo = resultado.getString("Clave_articulo");
                String nombre = resultado.getString("nombre");
                int precio = Integer.parseInt(resultado.getString("precio"));
               String clave_fabricante = resultado.getString("clave_fabricante");
               
                consulta.setClave_articulo(Clave_articulo);
                consulta.setNombre(nombre);
                consulta.setPrecio(precio);
                consulta.setClave_fabricante(clave_fabricante);
                articulos.add(consulta);

            }
//            for (int i = 0; i < consulta.size(); i++) {
//                System.out.println(consulta.get(i).getCliente());
//            }

        } catch (SQLException ex) {
            System.out.println("Error al ejecutar la consulta" + ex);
        }
        return articulos;
    }
    //   SELECT * FROM ARTICULOS WHERE Nombre=’Memoria RAM’ OR Nombre=’Memoria USB’ ;                            
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Presentar_B1();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Presentar_B3();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Presentar_B4();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                                    
      Presentar_B2();
            
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Presentar_B5();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextArea1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextArea1AncestorAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextArea1AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz_Tienda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
